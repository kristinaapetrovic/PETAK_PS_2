/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import controller.Controller;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Instrument;
import model.Osoba;

/**
 *
 * @author Korisnik
 */
public class BrisanjeForma extends javax.swing.JFrame {

    private Instrument odabrani;

    /**
     * Creates new form BrisanjeForma
     */
    public BrisanjeForma(Instrument i) {
        initComponents();
        jTextFieldInstrument.setEnabled(false);
        jTextFieldInstrument.setText(i.getNaziv());
        List<Osoba> lista = Controller.getInstance().vratiOsobeInstrument(i);
        ModelTabeleOsoba mto = new ModelTabeleOsoba(lista);
        jTableOsobe.setModel(mto);
        odabrani = i;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldInstrument = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOsobe = new javax.swing.JTable();
        jButtonObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Instrument ");

        jTableOsobe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableOsobe);

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jTextFieldInstrument, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jButtonObrisi)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldInstrument, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButtonObrisi)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed

        int[] niz = jTableOsobe.getSelectedRows();
        if (niz == null) {
            JOptionPane.showMessageDialog(this, "Izaberite jednu ili vise osoba");
            return;
        }

        int odg = JOptionPane.showConfirmDialog(this, "Da li zelite da obrisete osobe?", "Provera", JOptionPane.YES_NO_OPTION);
        if (odg == JOptionPane.YES_OPTION) {

            List<Osoba> lista = new ArrayList<>();
            ModelTabeleOsoba mto = (ModelTabeleOsoba) jTableOsobe.getModel();
            for (int i : niz) {
                lista.add(mto.getLista().get(i));
            }

            boolean uspesno = Controller.getInstance().obrisiSviranje(odabrani, lista);
            if (uspesno) {
                JOptionPane.showMessageDialog(this, "Obrisane su osobe");
                osveziTabelu();
            } else {
                JOptionPane.showMessageDialog(this, "Greska pri brisanju");
            }
        }
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableOsobe;
    private javax.swing.JTextField jTextFieldInstrument;
    // End of variables declaration//GEN-END:variables

    private void osveziTabelu() {
        List<Osoba> lista = Controller.getInstance().vratiOsobeInstrument(odabrani);
        ModelTabeleOsoba mto = new ModelTabeleOsoba(lista);
        jTableOsobe.setModel(mto);
    }
}
